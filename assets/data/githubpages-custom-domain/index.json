{"hash":"6e42c37957590ef0e9cc80b164d35c5d5d5e1d30","data":{"post":{"id":"ab5c430a1ae3531903ece31527288e1c","title":"CNAME을 활용해서 GitHub Pages에 커스텀 도메인 고정 시키기","content":"<h2 id=\"배포-할때마다-도메인을-다시-잡아-줘야-한다면\"><a href=\"#%EB%B0%B0%ED%8F%AC-%ED%95%A0%EB%95%8C%EB%A7%88%EB%8B%A4-%EB%8F%84%EB%A9%94%EC%9D%B8%EC%9D%84-%EB%8B%A4%EC%8B%9C-%EC%9E%A1%EC%95%84-%EC%A4%98%EC%95%BC-%ED%95%9C%EB%8B%A4%EB%A9%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>배포 할때마다 도메인을 다시 잡아 줘야 한다면</h2>\n<h3 id=\"문제점\"><a href=\"#%EB%AC%B8%EC%A0%9C%EC%A0%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>문제점</h3>\n<p>초반, GitHub Pages에서 <code>.io</code> 도메인을 사용한 페이지 작업을 완료했는데도 불구하고 배포를 한 뒤에 접속해 보면 매번 이렇게 404가 떴습니다. Setting에 들어가서 Custom domain을 잡아주면 문제는 해결되긴 했지만 근본적인 문제점은 모르는 상태였습니다.</p>\n<p><img src=\"https://live.staticflickr.com/65535/49417616392_69a710f745_c.jpg\" alt=\"CNAME\"></p>\n<p>새롭게 배포작업을 할때마다 Custom domain에 도메인을 입력해야 하는 문제점은 이 작업 자체가 은근 귀찮다 보니 조금씩 이런저런 이유를 들면서 블로그 작성도 미루곤 했었습니다.</p>\n<h3 id=\"cname으로-해결\"><a href=\"#cname%EC%9C%BC%EB%A1%9C-%ED%95%B4%EA%B2%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>CNAME으로 해결</h3>\n<p>이번에 Gridsome으로 변경하면서 다시한번 GitHub Pages의 설정 관련 정보들을 취합해 보며 알게 된 부분이 CNAME 이었습니다. 이전 방식인 CNAME의 설정 전에도 배포가 된 뒤에는 CNAME이 생성된 것을 확인할 수 있었는데요. GitHub Pages 측에서 Custom domain을 사용할 때 이 파일을 생성한다는 것을 모르고 있었던 거였습니다. 로컬작업에서는 당연히 생기지 않는 파일이다 보니 배포 후에는 딱히 생성된 파일에 관심을 두지 않았던 것이 원인이었습니다.</p>\n<p><img src=\"https://live.staticflickr.com/65535/49416927048_d1fddaf8d0_c.jpg\" alt=\"CNAME\"></p>\n<p>일반적으로는 도메인 관리쪽에서 도메인에 대한 <code>user.github.io</code>에 대해 CNAME을 설정하는 방식으로 잡고 있었습니다. 이것도 맞는 거지만 제가 진행한 방법은 단순히 배포한 뒤에 생성되는 CNAME 파일을 배포전의 소스 파일쪽에 받아 두고 그대로 배포를 진행하는 것이었습니다. 배포하면 배포되던 자리에 복사가 될 테니깐요.</p>\n<p>제가 문제를 해결한 방법은 다음과 같습니다.</p>\n<ol>\n<li><code>github.io</code>에 배포과정을 진행합니다.</li>\n<li>Custom domain에 보유하고 있는 도메인을 입력후 저장합니다.</li>\n<li>배포된 파일리스트를 확인해서 CNAME 파일이 있는지 확인합니다.</li>\n<li>해당 파일을 다운 받거나 내용을 복사해 둡니다.</li>\n<li>배포된 파일구조에 배포되도록 CNAME 파일을 소스측의 적정 위치에 저장합니다.</li>\n<li>다시 배포 뒤 문제 없이 잘 돌아가는지 확인합니다.</li>\n</ol>\n<h2 id=\"cname-설정\"><a href=\"#cname-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>CNAME 설정</h2>\n<p>일단 작업은 이전 단계에서 배포시 생성된 파일을 소스파일쪽에 두는 것으로 마무리가 되긴 했습니다.</p>\n<p><mark>여기서부터는 작업 진행중에 공식 가이드를 보고 알게 된 내용에 대한 기록 같은 성격이라서 그냥 넘기셔도 좋을 듯 합니다.</mark></p>\n<p><strong>GitHub Pages의 공식 가이드</strong>: <a href=\"https://help.github.com/en/github/working-with-github-pages/managing-a-custom-domain-for-your-github-pages-site\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://help.github.com/en/github/working-with-github-pages/managing-a-custom-domain-for-your-github-pages-site</a></p>\n<p>CNAME 설정초반에 <code>www.domain.com</code>식으로 도메인 관리쪽에서 지정이 필요하다는 가이드를 보고 알게 된 내용입니다. 기본적으로 서브 도메인쪽을 공란으로 두면 설정을 진행할 수 없기 때문이기도 하고 대표 도메인인 만큼 일반적인 <code>www</code>를 지정하는 방식을 기준으로 잡았습니다.</p>\n<p><img src=\"https://live.staticflickr.com/65535/49417616427_c0ab050130.jpg\" alt=\"CNAME\"></p>\n<p>전 지금까지 <code>www</code>를 제외한 도메인을 주로 사용하고 있었기 때문에 추가적으로 <code>www</code>를 붙인 CNAME을 생성해 두었습니다만 결과적으로 CNAME의 <code>www</code>의 유무는 크게 영향은 없는 것 같습니다. 시험삼아 이전 방식의 배포당시 CNAME 파일을 열어 보니 <code>www</code>가 빠져 있기에 딱히 문제는 없어 보였습니다.</p>\n<p>이 설정 부분은 자세한 설명등은 GitHub Pages의 공식 가이드 문서에서도 확인 가능하니 참고 하시기 바랍니다.</p>\n<p>간단히 요약하면 다음과 같습니다.</p>\n<ol>\n<li>도메인 CNAME 관리 창에서 설정을 마칩니다.</li>\n<li>CNAME을 설정한 후에는 <code>dig</code> 명령어로 도메인과 제대로 연결이 되어 있는지 확인 작업을 진행합니다.</li>\n<li>GitHub Pages의 설정화면의 Custom domain에 원하는 도메인을 지정합니다.</li>\n</ol>\n<pre><code>dig www.example.com +nostats +nocomments +nocmd\n</code></pre>\n<p>상기 명령을 통해 CNAME과 GitHub Domain IP가 제대로 연결이 되어 있는지를 확인합니다.</p>\n<pre><code>; &#x3C;&#x3C;>> DiG 9.10.6 &#x3C;&#x3C;>> WWW.EXAMPLE.COM +nostats +nocomments +nocmd\n;; global options: +cmd\n;WWW.EXAMPLE.COM.           IN  A\nWWW.EXAMPLE.COM.        7200    IN  CNAME   example.github.io.\nexample.github.io.  3600    IN  A   185.199.110.153\nexample.github.io.  3600    IN  A   185.199.111.153\nexample.github.io.  3600    IN  A   185.199.109.153\nexample.github.io.  3600    IN  A   185.199.108.153\n</code></pre>\n<p>제대로 GitHub와 연결된 것을 확인할 수 있다면 성공입니다.\n새롭게 연결을 시켜 주었을 경우 HTTPS설정이 적용되려면 시간이 좀 걸리는 편이니 몇시간 뒤에 다시 재접속을 해보시면 됩니다. 보통 몇시간 내로 가능하긴 한데요 최대 하루정도는 생각하시는게 맘 편하실겁니다.</p>\n","date":"2020/01/21","timeToRead":2}},"context":{}}